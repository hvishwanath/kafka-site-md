name: Build and Deploy Site

on:
  push:
    branches: [ markdown, main ]
  workflow_dispatch:
    inputs:
      target_branches:
        description: 'Comma-separated list of branches to build (e.g., markdown,main)'
        required: false
        default: 'markdown,main'
        type: string

env:
  # Default branches - can be overridden by repository variables
  BUILD_BRANCHES: 'markdown,main'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history needed for branch operations
    
    - name: Run make build
      run: |
        make build
    
    - name: Verify build output
      run: |
        echo "Build output contents:"
        ls -la output/
        echo "HTML files found:"
        find output/ -name "*.html" | head -10
    
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
    
    - name: Create or checkout site-html branch
      run: |
        # Check if site-html branch exists
        if git show-ref --verify --quiet refs/remotes/origin/site-html; then
          echo "site-html branch exists, checking it out"
          git checkout -B site-html origin/site-html
        else
          echo "site-html branch doesn't exist, creating it"
          git checkout --orphan site-html
          git rm -rf .
        fi
    
    - name: Copy build output to site-html branch
      run: |
        # Remove all files except .git
        find . -not -path './.git*' -not -path './output' -delete 2>/dev/null || true
        
        # Copy all contents from output directory to root
        cp -r output/* . 2>/dev/null || true
        
        # Remove the output directory itself
        rm -rf output/
        
        # Add all files
        git add .
        
        # Show what will be committed
        echo "Files to be committed:"
        git status --porcelain
    
    - name: Commit and push to site-html branch
      run: |
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Deploy site build from ${{ github.ref_name }} - ${{ github.sha }}"
          git push origin site-html
          echo "Successfully deployed to site-html branch"
        fi
    
    - name: Create deployment summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Source Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Target Branch**: site-html" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Output" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        ls -la output/ 2>/dev/null || echo "No output directory found" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
