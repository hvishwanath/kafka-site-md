<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on</title><link>https://example.kafka-site-md.dev/081/getting-started/</link><description>Recent content in Getting Started on</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://example.kafka-site-md.dev/081/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://example.kafka-site-md.dev/081/getting-started/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.kafka-site-md.dev/081/getting-started/introduction/</guid><description>Introduction KafkaÂ® is a distributed, partitioned, replicated commit log service. It provides the functionality of a messaging system, but with a unique design.
What does all that mean?
First let&amp;rsquo;s review some basic messaging terminology:
Kafka maintains feeds of messages in categories called topics. We&amp;rsquo;ll call processes that publish messages to a Kafka topic producers. We&amp;rsquo;ll call processes that subscribe to topics and process the feed of published messages consumers.. Kafka is run as a cluster comprised of one or more servers each of which is called a broker.</description></item><item><title>Use Cases</title><link>https://example.kafka-site-md.dev/081/getting-started/uses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.kafka-site-md.dev/081/getting-started/uses/</guid><description>Use Cases Here is a description of a few of the popular use cases for Apache Kafka. For an overview of a number of these areas in action, see this blog post.
Messaging Kafka works well as a replacement for a more traditional message broker. Message brokers are used for a variety of reasons (to decouple processing from data producers, to buffer unprocessed messages, etc). In comparison to most messaging systems Kafka has better throughput, built-in partitioning, replication, and fault-tolerance which makes it a good solution for large scale message processing applications.</description></item><item><title>Quick Start</title><link>https://example.kafka-site-md.dev/081/getting-started/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.kafka-site-md.dev/081/getting-started/quickstart/</guid><description>Quick Start This tutorial assumes you are starting fresh and have no existing Kafka or ZooKeeper data.
Step 1: Download the code Download the 0.8.1.1 release and un-tar it.
&amp;gt; **tar -xzf kafka_2.9.2-0.8.1.1.tgz** &amp;gt; **cd kafka_2.9.2-0.8.1.1** Step 2: Start the server Kafka uses ZooKeeper so you need to first start a ZooKeeper server if you don&amp;rsquo;t already have one. You can use the convenience script packaged with kafka to get a quick-and-dirty single-node ZooKeeper instance.</description></item><item><title>Ecosystem</title><link>https://example.kafka-site-md.dev/081/getting-started/ecosystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.kafka-site-md.dev/081/getting-started/ecosystem/</guid><description>Ecosystem There are a plethora of tools that integrate with Kafka outside the main distribution. The ecosystem page lists many of these, including stream processing systems, Hadoop integration, monitoring, and deployment tools.</description></item><item><title>Upgrading</title><link>https://example.kafka-site-md.dev/081/getting-started/upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.kafka-site-md.dev/081/getting-started/upgrade/</guid><description>Upgrading From Previous Versions Upgrading from 0.8.0 to 0.8.1 0.8.1 is fully compatible with 0.8. The upgrade can be done one broker at a time by simply bringing it down, updating the code, and restarting it.
Upgrading from 0.7 0.8, the release in which added replication, was our first backwards-incompatible release: major changes were made to the API, ZooKeeper data structures, and protocol, and configuration. The upgrade from 0.7 to 0.</description></item></channel></rss>